{#
    Create widget in popup
    Parameters:
        class - button class to click, required
        title - popup title
        multiple - option to allow multiple instances, default is false
        dialogOptions - option for dialog widget
        event - event to listen for grid update
        widgetAlias - widget alias to update grid
#}
{% macro popupWidget(parameters) %}
    <script type="text/javascript">
        require(
                ['jquery', 'underscore', 'oro/dialog-widget', 'oro/widget-manager'],
                function ($, _, DialogWidget, WidgetManager) {
                    'use strict';
                    $(function () {
                        {% if parameters.class is defined %}
                        {% set multiple = parameters.multiple is defined and parameters.multiple %}

                        $(document).on('click', '.{{ parameters.class }}', function (e) {
                            var element = $(this);
                            var url = element.data('url');
                            if (_.isUndefined(url)) {
                                url = element.attr('href');
                            }

                            {% if not multiple %}
                            // only one instance of widget is allowed
                            if (element.data('widget-opened')) {
                                return;
                            } else {
                                element.data('widget-opened', true);
                            }
                            {% endif %}

                            {% set defaultOptions = {
                                'title': parameters.title,
                                'allowMaximize': true,
                                'allowMinimize': true,
                                'dblclick': 'maximize',
                                'maximizedHeightDecreaseBy': 'minimize-bar',
                                'width': 1000
                            } %}
                            // create and open widget
                            var widget = new DialogWidget({
                                url: url,
                                dialogOptions: {{ defaultOptions|merge(parameters.dialogOptions|default({}))|json_encode|raw }}
                            });

                            {% if parameters.event is defined and parameters.widgetAlias is defined %}
                            // reload widget with list of contact calls
                            widget.on('{{ parameters.event }}', function () {
                                WidgetManager.getWidgetInstanceByAlias('{{ parameters.widgetAlias }}', function (contactCallsWidget) {
                                    contactCallsWidget.loadContent();
                                });
                            });
                            {% endif %}

                            {% if not multiple %}
                            widget.on('widgetRemove', function () {
                                element.data('widget-opened', false);
                            });
                            {% endif %}

                            widget.render();

                            e.preventDefault();
                        });
                        {% endif %}
                    });
                }
        );
    </script>
{% endmacro %}
